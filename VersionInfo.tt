<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<#
int revision = 0;

try
{
  using(var file = File.OpenText(Host.ResolvePath("VersionInfo.cs")))             
    revision = int.Parse(file.ReadLine().Replace("//","")) + 1;
}
catch { }

//edit this to change major/minor/build 
string version = $"1.1.0.{revision}";

//add this to pre-build tasks to transform .tt to .cs
//"$(DevEnvDir)\TextTransform.exe" -a !!BuildConfiguration!$(Configuration) "$(SolutionDir)VersionInfo.tt"

#>
//<#= revision #>
// 
// This code was generated by a tool. Any manual changes will be lost
// the next time this code is regenerated, change VersionInfo.tt instead.

using System.Reflection;
using System.Runtime.InteropServices;

[assembly: AssemblyCompany("Afreet Software, Inc.")]
[assembly: AssemblyProduct("VE3NEA.HamCockpit")]
[assembly: AssemblyCopyright("Copyright © 2020 Alex Shovkoplyas VE3NEA")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
[assembly: ComVisible(false)]

//increment manually when releasing a new version
//not shown in the file properties dialog 
[assembly: AssemblyVersion("1.0")]

//increment after every build
//appears in file properties as File Version and Product Version
[assembly: AssemblyFileVersion("<#= version #>")]

//Product Version shows AssemblyInformationalVersion if present,
//otherwise it shows AssemblyFileVersion